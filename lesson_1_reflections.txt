How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It helped me due to see the differences between the two files.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I could try things without the fear of missing info. At any moment i could get back to the previous state of the code.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: I have control.

    Cons: I can forget committing and this can lead to mistakes because of not making enough committments.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because Git is programming oriented, so the changes use to be in multiple files at a time.

How can you use the commands git log and git diff to view the history of files?

    With git log you can view a list of the different commits, including the ID and the comment. 
    With git diff and the 2 ID's of the commits, you can view the differences between 2 commits, including the added or deleted lines. 

How might using version control make you more confident to make changes that
could break something?

    Because I can get back at any moment.

Now that you have your workspace set up, what do you want to try using Git for?

    Try commiting and changing files :)