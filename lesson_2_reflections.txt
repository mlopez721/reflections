What happens when you initialize a repository? Why do you need to do it?

	The Git system knows that we want to track some or all of the files in this directory and/or subdirectories. We need to do it because it's the first step of the process. After that, we must tell Git wich files have to track.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	It's a temporary or intermediate space where we can control wich files will be tracked in the next commit.

How can you use the staging area to make sure you have one commit per logical
change?
	Adding only to the staging area the files related to that logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	When I'd like to try new or experimental features that aren't going to be in the final program, or a totally different version of the program without changing the original files.

How do the diagrams help you visualize the branch structure?
	The diagram shows in a clear way where the files takes a separate way.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	The result is the mix of the two branches in one, with both parts of code. We represent it in that way because it's what it does. 

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?	